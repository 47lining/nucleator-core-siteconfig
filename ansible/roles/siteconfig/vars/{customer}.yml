# Copyright 2015 47Lining LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---

#
# configuration for customer {{add customer name}}
#

# customer_domain is used for external routing to each of the cages
# configured for this customer, e.g. "nucleator-ui.build.somedomain.com"

customer_domain: "somedomain.com" # TODO update domain name to match
                                  # domain used for this customer's Cages

# A Cage is a set of managed AWS infrastructure that exists for a particular purpose.
# Cages can be maintained across one or more customer-specific AWS Accounts.

# TODO: modify cage names for this customer.  Consider starting with just build.
cage_names:

  # The AWS Acccount that hosts the build cage acts
  # as the source account in cross-account builds
  build:
    account: test1
    region: us-west-2
    owner: exampleUser
  ci:
    account: test1
    region: us-west-2
    owner: exampleUser
  stage:
    account: test2
    region: us-west-2
    owner: exampleRole
  prod:
    account: test2
    region: us-west-2
    owner: exampleRole

aws_accounts:

  # TODO: add an account specification block for each AWS Account for this customer

  test1: # TODO: update the human-readable "Friendly Name" of this Account.

    account_number: 123456789012 # TODO: enter Account Number for this AWS Account

    bootstrap_region: us-west-2 # TODO: select region to use for Account-level resources supporting best practices (e.g. detailed billing)

    map_region_plus_redundant_zone_number_to_vpc_valid_az:
      # TODO: update AZ1 and AZ2 for each region to match the first two AZ's
      # capable of hosting VPC subnets in the new account.  This allows
      # Nucleator to create redundant subnets and subnet groups for
      # high-availability deployment topologies.  Note that the specific AZ's
      # available for use within VPCs may vary by Account and Region, especially
      # for Regions where AWS has a strong pre-VPC footprint like us-east-1.
      # Do not assume that the available AZs will be the same as for previous
      # Accounts.
      us-west-2:
        AZ1: us-west-2a
        AZ2: us-west-2b
      us-east-1:
        AZ1: us-east-1a
        AZ2: us-east-1c
      eu-west-1:
        AZ1: eu-west-1a
        AZ2: eu-west-1b

  test2: # TODO: update the human-readable "Friendly Name" of this Account.

    account_number: 987654321021 # TODO: enter Account Number for this AWS Account

    bootstrap_region: us-west-2 # TODO: select region to use for Account-level resources supporting best practices (e.g. detailed billing)

    map_region_plus_redundant_zone_number_to_vpc_valid_az:
      # TODO: update AZ1 and AZ2 for each region to match the first two AZ's
      # capable of hosting VPC subnets in the new account.  This allows
      # Nucleator to create redundant subnets and subnet groups for
      # high-availability deployment topologies.  Note that the specific AZ's
      # available for use within VPCs may vary by Account and Region, especially
      # for Regions where AWS has a strong pre-VPC footprint like us-east-1.
      # Do not assume that the available AZs will be the same as for previous
      # Accounts.
      us-west-2:
        AZ1: us-west-2b
        AZ2: us-west-2c
      us-east-1:
        AZ1: us-east-1b
        AZ2: us-east-1c
      eu-west-1:
        AZ1: eu-west-1a
        AZ2: eu-west-1c

#
# Nucleator Cage CIDR Whitelist
#
# Access to Nucleator Cages will be limited to those CIDRs listed here
# 
# If you add a specific whitelist and are using the Nucleator Builder
# Stackset to manage provisioning & configuration of other Cages, be
# sure to include the public IP of the NAT instance in the build cage
# in your whitelist.
#
NUCLEATOR_CAGE_CIDR_WHITELIST:
  - 0.0.0.0/0    # Strongly recommend changing whitelist to restricted IP ranges

# When CIDR_WHITELIST changes, special care must be taken not to:
#
# - exceed the max numbe of rules per NACL; or
# - create conflicting NACL rule numbers
#
# Both of these can be avoided by setting
#     NUCLEATOR_CAGE_REMOVE_INBOUND_PUBLIC_RULES
# to True for an intervening "cage provision" to force a stack
# update that removes all inbound NACL rules between updates
# to the Whitelist. This approach will create some
# minimal access downtime for your cage
#
# As an alternative,
#     NUCLEATOR_CAGE_CIDR_WHITELIST_INITIAL_RULENUM
# is provided, so that rules can be updated to use a different
# initial rulenum. This approach avoids conflicting NACL rule numbers
# and incurs zero downtime, but with more than a small number of
# whitelist entries (about 4), will likely exhaust the max number of
# rules per NACL.
#
# This is true because, when updating stacks, Cloudformation first
# creates all required new Resources, then in the
# "UPDATE_COMPLETE_CLEANUP_IN_PROGRESS" phase it deletes unused
# resources.
#
NUCLEATOR_CAGE_CIDR_WHITELIST_INITIAL_RULENUM: 100
NUCLEATOR_CAGE_REMOVE_INBOUND_PUBLIC_RULES: False
NUCLEATOR_CAGE_OPENVPN_ENABLED: False
